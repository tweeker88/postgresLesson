LESSON1:
1) \set PROMPT1 '%n:%~%R%#' - устанавливает переменную для отображение user:db(~)
2) \t - отключает вывод имён столбцов и результирующей строки с количеством выбранных записей.
3) \a - выравнивание таблиц
4) \o - вывод результатов в файл/на экран
LESSON2:
SELECT * FROM pg_file_settings - показывает содержимое конфига, реальные значения могут отличаться

SELECT setting FROM pg_settings - показывает значения всех параметров
name, setting, unit - название и значение
boot_val - значение по умолчанию
reset_val - если параметр был изменен во время сеанса, то командой RESET можно восстановить это значение
source - источник текущего значения параметра
pending_restart - значение в файле конфига, для применения требуется перезапуск сервера
context - действие, необходимое для применения параметра

SELECT pg_reload_conf() - перечитать конфиг

ALTER SYSTEM SET - устанавливает параметр в конфиг файл postgresql.auto.conf
ALTER SYSTEM RESET - удаляет параметр в конфиг файл postgresql.auto.conf

SHOW - показывает значение параметра
SET - установка параметров во время сеанта

current_setting(name) - вывод значения параметра

LESSON 3:
Транзакции работаю со снимками.
Read committed является уровнем изоляции по умолчанию в
PostgreSQL. На этом уровне снимок данных строится в начале
выполнения каждого оператора SQL. Таким образом, оператор
работает с неизменной и согласованной картиной данных, но два
одинаковых запроса, следующих один за другим, могут показать
разные данные.
Repeatable read снимок строится в начале транзакции (при
выполнении первого оператора) — поэтому все запросы в одной
транзакции видят одни и те же данные. Этот уровень удобен,
например, для отчетов, состоящих из нескольких запросов.
Serializable гарантирует полную изоляцию: можно писать
операторы так, как будто транзакция работает одна. Плата за
удобство — определенная доля транзакций завершается

Во всех строках есть доп. скрытые столбцы:
xmin - код транзакции, добавившей строку этой версии
xmax - код транзацкии, удалившей строку этой версии